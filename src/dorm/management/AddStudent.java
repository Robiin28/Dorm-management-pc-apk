/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dorm.management;

import java.awt.*;
import java.awt.event.ItemEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Dell
 */
public class AddStudent extends javax.swing.JFrame {

      Connection con;
      
      
public AddStudent() {
        initComponents();
         connection();
       
        populateBuildComboBox(jbuild1, "building_men");
        populateBuildComboBox(jbuild, "building_women");
        jbuild1.setEnabled(false);
        jbuild.setEnabled(false);
         jroom.setEnabled(false);
           jdroll.setEnabled(false);
           jdroll.setEditable(false);
       
        // autoFillId();
    }



  
   private void populateBuildComboBox(JComboBox<String> comboBox, String tableName) {
        comboBox.removeAllItems(); // Clear existing items

        try {
            String query = "SELECT DISTINCT block FROM " + tableName;
            try (PreparedStatement stmt = con.prepareStatement(query);
                 ResultSet rs = stmt.executeQuery()) {
                while (rs.next()) {
                    comboBox.addItem(rs.getString("block"));
                }
            }
        } catch (SQLException ex) {
            // Handle the exception
            ex.printStackTrace();
        }
    }
     public void connection(){
      
         
        try {
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dormmanage?zeroDateTimeBehavior=convertToNull","root","****");
        } catch (SQLException ex) {
            Logger.getLogger(Login_page.class.getName()).log(Level.SEVERE, null, ex);
        }
               
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jadd = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jbuild1 = new javax.swing.JComboBox<>();
        jbuild = new javax.swing.JComboBox<>();
        jroom = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jmale = new javax.swing.JRadioButton();
        jfemale = new javax.swing.JRadioButton();
        jage = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jphon = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jdroll = new javax.swing.JTextField();
        jfirst = new javax.swing.JTextField();
        jlast = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jdep = new javax.swing.JComboBox<>();
        jyear = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(51, 0, 51));
        setBounds(new java.awt.Rectangle(280, 90, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jadd.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jadd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new student.png"))); // NOI18N
        jadd.setText("Add");
        jadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaddActionPerformed(evt);
            }
        });
        getContentPane().add(jadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 650, 100, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/profile.png"))); // NOI18N
        jLabel11.setText("    ADD STUDENT");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 430, 90));

        jPanel2.setBackground(new java.awt.Color(0, 255, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 2));
        jPanel2.setForeground(new java.awt.Color(255, 255, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/room.png"))); // NOI18N
        jLabel12.setText("Room");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 91, 50));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/List of Paid & Dues Students.png"))); // NOI18N
        jLabel13.setText("Building");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 91, -1));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setText("Dorm information ");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 2, -1, 37));

        jbuild1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jbuild1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuild1ActionPerformed(evt);
            }
        });
        jPanel2.add(jbuild1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 80, -1));

        jbuild.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jbuild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuildActionPerformed(evt);
            }
        });
        jPanel2.add(jbuild, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 80, -1));
        jPanel2.add(jroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 120, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 510, 760, 110));

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51), 2));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Last Name");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("First Name");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Age");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Gender");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, 30));

        buttonGroup1.add(jmale);
        jmale.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jmale.setText("Male");
        jmale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmaleActionPerformed(evt);
            }
        });
        jPanel3.add(jmale, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 64, -1));

        buttonGroup1.add(jfemale);
        jfemale.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jfemale.setText("Female");
        jfemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfemaleActionPerformed(evt);
            }
        });
        jPanel3.add(jfemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, -1, -1));
        jPanel3.add(jage, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 332, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setText("Personal info");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 16, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Phone");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));
        jPanel3.add(jphon, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 332, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("D.Role no");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, -1, -1));

        jdroll.setBackground(new java.awt.Color(51, 255, 255));
        jdroll.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jdroll.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.add(jdroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 60, 50));
        jPanel3.add(jfirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 330, -1));
        jPanel3.add(jlast, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 330, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 118, 760, 220));

        jPanel4.setBackground(new java.awt.Color(153, 255, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 102), 2));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(jid, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 260, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Id");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Department");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, 20));

        jdep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Architecture", "Civil", "IT", "Computer Scince", "Software", "Mechanical", "Metrology" }));
        jPanel4.add(jdep, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 260, -1));

        jyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fresh year", "2nd year", "3rd year", "4th year", "GC" }));
        jPanel4.add(jyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 260, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("year");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Campus info");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 16, -1, -1));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 350, 760, 150));

        jButton1.setForeground(new java.awt.Color(255, 51, 51));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Close all jframe.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(968, 0, -1, -1));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 97, 1031, 10));
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 704, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmaleActionPerformed

       
          jbuild.setEnabled(true);
          jbuild1.setEnabled(false);
           
         jroom.setEnabled(true);
         int maxIdForMale = getMaxId("menstd");
       jdroll.setText(String.valueOf(maxIdForMale));
        
        
    }//GEN-LAST:event_jmaleActionPerformed

     private int getMaxId(String tableName) {
    String query = "SELECT MAX(droll) FROM " + tableName;
    try (PreparedStatement stmt = con.prepareStatement(query)) {
        try (ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                return rs.getInt(1) + 1;  // Add 1 to the max value
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error fetching max ID: " + e.getMessage());
        e.printStackTrace();
    }
    return 0;  // Default value if something goes wrong
}
    
    
    
    private void jaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaddActionPerformed

//  String insert_sql;
//
//    try {
//        if (!jmale.isSelected() && !jfemale.isSelected()) {
//            JOptionPane.showMessageDialog(this, "Please select gender.", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//
////        String roomNumber = jroom.getText();
//        String buildNo = jmale.isSelected() ? jbuild.getSelectedItem().toString() : jbuild1.getSelectedItem().toString();
//
//        if (jmale.isSelected()) {
//            insert_sql = "INSERT INTO menstd(droll, firstN, lastN, age,phone,id,department,year,build_no,room_no) VALUES (?, ?, ?, ?,?,?,?,?,?,?)";
//        } else {
//            insert_sql = "INSERT INTO femstd(droll, firstN, lastN, age,phone,id,department,year,build_no,room_no) VALUES (?, ?, ?, ?,?,?,?,?,?,?)";
//        }
//
//        try (PreparedStatement stmt = con.prepareStatement(insert_sql)) {
//            
//            try {
//    int rollNumber = Integer.parseInt(jdroll.getText());
//    stmt.setInt(1, rollNumber);
//} catch (NumberFormatException e) {
//    JOptionPane.showMessageDialog(this, "Invalid Roll Number. Please enter a valid integer.", "Error", JOptionPane.ERROR_MESSAGE);
//    return; // Exit the method to avoid further processing
//}
//
//            
//            
//            
//            stmt.setString(2, jfirst.getText());
//            stmt.setString(3, jage.getText());
//            stmt.setInt(4, Integer.parseInt(jage.getText()));
//            stmt.setString(5, jphon.getText());
//            stmt.setString(6, jid.getText());
//            stmt.setString(7, jdep.getSelectedItem().toString());
//            stmt.setString(8, jyear.getSelectedItem().toString());
//            stmt.setString(9, buildNo);
//            stmt.setString(10, jroom.getText());
//            
//            stmt.executeUpdate();
//        }
//
//        JOptionPane.showMessageDialog(this, "student added successfully");
//       
//        clearInputFields();
//    } catch (Exception e) {
//        JOptionPane.showMessageDialog(this, "Error assigned room: " + e.getMessage());
//        e.printStackTrace();
//}
//        
//        /////// major up


String insert_sql;

try {
    if (!jmale.isSelected() && !jfemale.isSelected()) {
        JOptionPane.showMessageDialog(this, "Please select gender.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Check if room number is available
    String buildNo = jmale.isSelected() ? jbuild.getSelectedItem().toString() : jbuild1.getSelectedItem().toString();
    String roomNo = jroom.getText();

    if (!isRoomAvailable(buildNo, roomNo)) {
        JOptionPane.showMessageDialog(this, "Room " + roomNo + " in " + buildNo + " is not available.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Check if dorm has not exceeded capacity
    if (isDormFull(buildNo)) {
        JOptionPane.showMessageDialog(this, "Dorm " + buildNo + " has reached its capacity.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (jmale.isSelected()) {
        insert_sql = "INSERT INTO menstd(droll, firstN, lastN, age,phone,id,department,year,build_no,room_no) VALUES (?, ?, ?, ?,?,?,?,?,?,?)";
    } else {
        insert_sql = "INSERT INTO femstd(droll, firstN, lastN, age,phone,id,department,year,build_no,room_no) VALUES (?, ?, ?, ?,?,?,?,?,?,?)";
    }

    try (PreparedStatement stmt = con.prepareStatement(insert_sql)) {
        try {
            int rollNumber = Integer.parseInt(jdroll.getText());
            stmt.setInt(1, rollNumber);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Roll Number. Please enter a valid integer.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method to avoid further processing
        }

        stmt.setString(2, jfirst.getText());
        stmt.setString(3, jage.getText());
        stmt.setInt(4, Integer.parseInt(jage.getText()));
        stmt.setString(5, jphon.getText());
        stmt.setString(6, jid.getText());
        stmt.setString(7, jdep.getSelectedItem().toString());
        stmt.setString(8, jyear.getSelectedItem().toString());
        stmt.setString(9, buildNo);
        stmt.setString(10, roomNo);

        stmt.executeUpdate();
    }

    JOptionPane.showMessageDialog(this, "Student added successfully");
    clearInputFields();
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error assigning room: " + e.getMessage());
    e.printStackTrace();
}


       
    }//GEN-LAST:event_jaddActionPerformed

    
    
    
    
    private boolean isRoomAvailable(String buildNo, String roomNo) {
    try {
        String tableName = jmale.isSelected() ? "menstd" : "femstd";
        String query = "SELECT COUNT(*) FROM " + tableName + " WHERE build_no = ? AND room_no = ?";
        try (PreparedStatement stmt = con.prepareStatement(query)) {
            stmt.setString(1, buildNo);
            stmt.setString(2, roomNo);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                int studentCount = rs.getInt(1);
                return studentCount < 6; // Return true if the room has fewer than 6 students
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return false;
}

// Function to check if the dormitory has reached its capacity
private boolean isDormFull(String buildNo) {
    try {
        String tableName = jmale.isSelected() ? "menstd" : "femstd";
        String query = "SELECT COUNT(DISTINCT room_no) FROM " + tableName + " WHERE build_no = ?";
        try (PreparedStatement stmt = con.prepareStatement(query)) {
            stmt.setString(1, buildNo);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                int roomCount = rs.getInt(1);
                return roomCount >= 6; // Return true if the dormitory has reached its capacity
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return false;
}
    
    
    
    
    
    
    
    private void clearInputFields() {
    jdroll.setText("");
    jfirst.setText("");
    jlast.setText("");
    jage.setText("");
     jage.setText("");
      jphon.setText("");
       jid.setText("");
        jroom.setText("");
}
    
//    
   
    
    
//    
    
    private void jfemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfemaleActionPerformed
        // TODO add your handling code here:
        
          jbuild1.setEnabled(true);
          jbuild.setEnabled(false);
         jroom.setEnabled(true);
//         jroom.setEnabled(true);
//         jroom1.setEnabled(false);
            int maxIdForFemale = getMaxId("femstd");
            jdroll.setText(String.valueOf(maxIdForFemale));
        
        
    }//GEN-LAST:event_jfemaleActionPerformed

    private void jbuildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuildActionPerformed
//        // TODO add your handling code here:
//     
//         jroom1.setEnabled(false);
//         jroom.setEnabled(true);
    
//    // Populate the corresponding room combo box based on the selected building
             
        
//        
//        
    }//GEN-LAST:event_jbuildActionPerformed

    private void jbuild1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuild1ActionPerformed
        // TODO add your handling code here:
//         jroom1.setEnabled(false);
//         jroom1.setEnabled(true);
       
        
    }//GEN-LAST:event_jbuild1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed

//    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton jadd;
    private javax.swing.JTextField jage;
    private javax.swing.JComboBox<String> jbuild;
    private javax.swing.JComboBox<String> jbuild1;
    private javax.swing.JComboBox<String> jdep;
    private javax.swing.JTextField jdroll;
    private javax.swing.JRadioButton jfemale;
    private javax.swing.JTextField jfirst;
    private javax.swing.JTextField jid;
    private javax.swing.JTextField jlast;
    private javax.swing.JRadioButton jmale;
    private javax.swing.JTextField jphon;
    private javax.swing.JTextField jroom;
    private javax.swing.JComboBox<String> jyear;
    // End of variables declaration//GEN-END:variables
}
